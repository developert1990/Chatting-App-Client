[{"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\App.tsx":"1","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\RegisterScreen.tsx":"2","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\index.tsx":"3","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\config\\index.ts":"4","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\userConstants.ts":"5","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\userReducer.ts":"6","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\userActions.ts":"7","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\index.tsx":"8","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\store.ts":"9","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\routes\\router.tsx":"10","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Navbar.tsx":"11","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SigninScreen.tsx":"12","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\PrivateRoute.tsx":"13","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\UserImage.tsx":"14","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\postConstants.ts":"15","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\postActions.ts":"16","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\postReducer.ts":"17","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Posts.tsx":"18","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\utils\\utils.ts":"19","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SinglePost.tsx":"20","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Reply.tsx":"21","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\replyActions.ts":"22","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\replyConstants.ts":"23","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\replyReducer.ts":"24","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ThirdColumn.tsx":"25","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ProfileScreen.tsx":"26","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfileReplies.tsx":"27","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfilePosts.tsx":"28","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\HomeScreen.tsx":"29","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\FollowModal.tsx":"30","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ImgUploadModal.tsx":"31","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CoverImgUploadModal.tsx":"32","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SearchScreen.tsx":"33","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchPosts.tsx":"34","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchUsers.tsx":"35","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\searchConstants.ts":"36","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NewMessageScreen.tsx":"37","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ToggleAlert.tsx":"38","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\searchAction.ts":"39","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\chatConstants.ts":"40","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\chatAction.ts":"41","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\chatReducer.ts":"42","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ChatScreen.tsx":"43","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CheckValidChatRoute.tsx":"44","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\InvalidPage.tsx":"45","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\MessageContents.tsx":"46","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\searchReducer.ts":"47","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NotificationScreen.tsx":"48","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\notificationConstants.ts":"49","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\notificationAction.ts":"50","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\notificationReducer.ts":"51","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\LoadingSpinner.tsx":"52","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\socketio.ts":"53","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\hooks\\index.ts":"54","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ChatListScreen.tsx":"55","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\MessageScreen.tsx":"56"},{"size":180,"mtime":1608078380877,"results":"57","hashOfConfig":"58"},{"size":3830,"mtime":1608097240564,"results":"59","hashOfConfig":"58"},{"size":367,"mtime":1610863444783,"results":"60","hashOfConfig":"61"},{"size":48,"mtime":1607973570394,"results":"62","hashOfConfig":"58"},{"size":867,"mtime":1608521145045,"results":"63","hashOfConfig":"61"},{"size":3982,"mtime":1610863444786,"results":"64","hashOfConfig":"61"},{"size":3957,"mtime":1610747162806,"results":"65","hashOfConfig":"61"},{"size":306,"mtime":1610793811033,"results":"66","hashOfConfig":"61"},{"size":5102,"mtime":1609621458900,"results":"67","hashOfConfig":"58"},{"size":3462,"mtime":1610855986178,"results":"68","hashOfConfig":"61"},{"size":2559,"mtime":1610855864117,"results":"69","hashOfConfig":"61"},{"size":1964,"mtime":1608182861671,"results":"70","hashOfConfig":"58"},{"size":847,"mtime":1608182953931,"results":"71","hashOfConfig":"58"},{"size":610,"mtime":1608671575549,"results":"72","hashOfConfig":"58"},{"size":1093,"mtime":1608462240904,"results":"73","hashOfConfig":"61"},{"size":4440,"mtime":1608872995807,"results":"74","hashOfConfig":"61"},{"size":4723,"mtime":1610863444785,"results":"75","hashOfConfig":"61"},{"size":5603,"mtime":1610855038658,"results":"76","hashOfConfig":"61"},{"size":2253,"mtime":1609570159126,"results":"77","hashOfConfig":"58"},{"size":4518,"mtime":1609834873466,"results":"78","hashOfConfig":"61"},{"size":5623,"mtime":1609581986623,"results":"79","hashOfConfig":"58"},{"size":1095,"mtime":1609834456801,"results":"80","hashOfConfig":"61"},{"size":244,"mtime":1608497603358,"results":"81","hashOfConfig":"61"},{"size":1026,"mtime":1610863444785,"results":"82","hashOfConfig":"61"},{"size":347,"mtime":1608360899574,"results":"83","hashOfConfig":"58"},{"size":15622,"mtime":1610779620682,"results":"84","hashOfConfig":"61"},{"size":2644,"mtime":1610780098425,"results":"85","hashOfConfig":"61"},{"size":1281,"mtime":1609615283649,"results":"86","hashOfConfig":"58"},{"size":3763,"mtime":1609840437479,"results":"87","hashOfConfig":"58"},{"size":5743,"mtime":1610863444773,"results":"88","hashOfConfig":"61"},{"size":4255,"mtime":1608873686417,"results":"89","hashOfConfig":"61"},{"size":4300,"mtime":1608873047944,"results":"90","hashOfConfig":"61"},{"size":3809,"mtime":1608747876253,"results":"91","hashOfConfig":"61"},{"size":1278,"mtime":1610780098426,"results":"92","hashOfConfig":"61"},{"size":2549,"mtime":1609615348474,"results":"93","hashOfConfig":"58"},{"size":468,"mtime":1608698468654,"results":"94","hashOfConfig":"61"},{"size":6545,"mtime":1609816525620,"results":"95","hashOfConfig":"58"},{"size":736,"mtime":1610863444778,"results":"96","hashOfConfig":"61"},{"size":1831,"mtime":1608881525656,"results":"97","hashOfConfig":"58"},{"size":1161,"mtime":1609620966845,"results":"98","hashOfConfig":"61"},{"size":3811,"mtime":1609797338744,"results":"99","hashOfConfig":"58"},{"size":4843,"mtime":1609795198004,"results":"100","hashOfConfig":"61"},{"size":13147,"mtime":1610856273678,"results":"101","hashOfConfig":"61"},{"size":999,"mtime":1610827681354,"results":"102","hashOfConfig":"61"},{"size":544,"mtime":1609235789660,"results":"103","hashOfConfig":"58"},{"size":1461,"mtime":1610832723125,"results":"104","hashOfConfig":"61"},{"size":1889,"mtime":1608698948699,"results":"105","hashOfConfig":"61"},{"size":5847,"mtime":1610793604546,"results":"106","hashOfConfig":"61"},{"size":528,"mtime":1609578165742,"results":"107","hashOfConfig":"61"},{"size":1677,"mtime":1610780098418,"results":"108","hashOfConfig":"61"},{"size":2276,"mtime":1609578530422,"results":"109","hashOfConfig":"58"},{"size":263,"mtime":1609614820834,"results":"110","hashOfConfig":"58"},{"size":794,"mtime":1609842981578,"results":"111","hashOfConfig":"58"},{"size":419,"mtime":1610856483320,"results":"112","hashOfConfig":"61"},{"size":5595,"mtime":1610827280930,"results":"113","hashOfConfig":"61"},{"size":5556,"mtime":1610832813445,"results":"114","hashOfConfig":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"r4yoid",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g7p2zs",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\App.tsx",[],["241","242"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\RegisterScreen.tsx",[],["243","244"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\index.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\config\\index.ts",[],["245","246"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\userConstants.ts",[],["247","248"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\userReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\userActions.ts",["249","250"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\index.tsx",[],["251","252"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\store.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\routes\\router.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Navbar.tsx",["253","254","255","256","257"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SigninScreen.tsx",[],["258","259"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\PrivateRoute.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\UserImage.tsx",["260"],"import React, { useEffect } from 'react'\r\nimport { API_BASE } from '../config';\r\nimport { SigninType } from '../reducers/userReducer';\r\n\r\ninterface UserImageProps {\r\n    userInfo: SigninType;\r\n    userDetailInfo: SigninType | undefined;\r\n}\r\n\r\nexport const UserImage: React.FC<UserImageProps> = ({ userInfo, userDetailInfo }) => {\r\n    return (\r\n        <div className=\"userImageContainer\">\r\n            <img\r\n                src={`${API_BASE}/uploads/images/${userDetailInfo === undefined ? userInfo.profilePic : userDetailInfo.profilePic}`}\r\n                alt=\"User's profile\" />\r\n        </div>\r\n    )\r\n}\r\n",["261","262"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\postConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\postActions.ts",["263","264"],"import { API_BASE } from './../config/index';\r\nimport Axios from 'axios';\r\nimport { POST_REQUEST, POST_SUCCESS, POST_FAIL, POST_LIST_REQUEST, POST_LIST_FAIL, POST_LIST_SUCCESS, POST_DELETE_REQUEST, POST_DELETE_SUCCESS, POST_DELETE_FAIL, POST_LIST_ONEUSER_REQUEST, POST_LIST_ONEUSER_SUCCESS, POST_LIST_ONEUSER_FAIL, POST_ALL_LIST_REQUEST, POST_ALL_LIST_SUCCESS, POST_ALL_LIST_FAIL } from './../constants/postConstants';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\n\r\nexport const postTextArea = (text: string) => async (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n    dispatch({ type: POST_REQUEST });\r\n    const { signinStore: { signinInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.post(`${API_BASE}/postText/upload`, { text }, {\r\n            headers: { Authorization: `Hong ${signinInfo.token}` },\r\n            withCredentials: true\r\n        });\r\n        dispatch({ type: POST_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// 로그인한 유저가 post한 것들 가져옴\r\nexport const postLists = () => async (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n    dispatch({ type: POST_LIST_REQUEST });\r\n    const { signinStore: { signinInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`${API_BASE}/postText/list`, {\r\n            // headers: { Authorization: `Hong ${signinInfo.token}` },\r\n            withCredentials: true\r\n        });\r\n        dispatch({ type: POST_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// 가입이 되어잇는 모든 유저의 post들을 가져온다.\r\nexport const allPostLists = () => async (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n    dispatch({ type: POST_ALL_LIST_REQUEST });\r\n    const { signinStore: { signinInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`${API_BASE}/postText/allList`, {\r\n            headers: { Authorization: `Hong ${signinInfo.token}` },\r\n            withCredentials: true\r\n        });\r\n        dispatch({ type: POST_ALL_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ALL_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const postDelete = (postId: string) => async (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n    dispatch({ type: POST_DELETE_REQUEST });\r\n    const { signinStore: { signinInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.delete(`${API_BASE}/postText/delete/${postId}`, {\r\n            headers: { Authorization: `Hong ${signinInfo.token}` },\r\n            data: { signinInfo: signinInfo },\r\n            withCredentials: true\r\n        });\r\n        console.log('delete data: ', data);\r\n        dispatch({ type: POST_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getPostsByOneUser = (userId: string) => async (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n    dispatch({ type: POST_LIST_ONEUSER_REQUEST });\r\n    const { signinStore: { signinInfo } } = getState();\r\n    // console.log('signinInfo  postLists에서: ', signinInfo)\r\n    try {\r\n        const { data } = await Axios.get(`${API_BASE}/postText/list/${userId}`, {\r\n            headers: { Authorization: `Hong ${signinInfo.token}` },\r\n            withCredentials: true\r\n        });\r\n        dispatch({ type: POST_LIST_ONEUSER_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_LIST_ONEUSER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}",["265","266"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\postReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Posts.tsx",["267","268"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\utils\\utils.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SinglePost.tsx",["269","270","271","272"],"import React, { Dispatch, SetStateAction, useState } from 'react';\r\nimport { postDataType } from '../reducers/postReducer';\r\nimport { API_BASE } from '../config';\r\nimport { timeDifference } from '../utils/utils';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport QuestionAnswerOutlinedIcon from '@material-ui/icons/QuestionAnswerOutlined';\r\nimport { postDelete } from '../actions/postActions';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialAppStateType } from '../store';\r\n\r\n\r\nexport interface SinglePostPropsType {\r\n    post: postDataType;\r\n    setShow?: Dispatch<SetStateAction<boolean>>;\r\n    handleLikeBtn: (postId: string) => any;\r\n    updatedPostData?: postDataType;\r\n}\r\nexport const SinglePost: React.FC<SinglePostPropsType> = ({ post, setShow, handleLikeBtn, updatedPostData }) => {\r\n\r\n\r\n    const signinStore = useSelector((state: initialAppStateType) => state.signinStore);\r\n    const { signinInfo } = signinStore;\r\n\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { _id, content, createdAt, postedBy, updatedAt } = post;\r\n    const displayName = postedBy?.firstName + \" \" + postedBy?.lastName;\r\n    const timeStamp = timeDifference(new Date().valueOf(), new Date(createdAt).valueOf());\r\n\r\n\r\n    const handleDelete = async (postId: string) => {\r\n        dispatch(postDelete(postId));\r\n    }\r\n\r\n    const commentsHandle = (postId: string) => {\r\n        // dispatch(listReply(postId));\r\n        if (setShow) {\r\n            setShow(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n\r\n                <div className=\"mainContentContainer\" >\r\n                    <div className=\"userImageContainer\">\r\n                        <img src={`${API_BASE}/uploads/images/${postedBy?.profilePic}`} alt=\"Profile\" />\r\n                    </div>\r\n                    <div className=\"postContentContainer\">\r\n                        <div className=\"header\">\r\n                            <Link to={\r\n                                {\r\n                                    pathname: `/profile/${postedBy?.userName}`,\r\n                                    state: postedBy,\r\n                                }\r\n                            }\r\n                                className=\"displayName\">{displayName}</Link>\r\n                            <span className=\"username\">@{postedBy?.userName}</span>\r\n                            <span className=\"date\">{timeStamp}</span>\r\n                            {\r\n                                signinInfo._id === postedBy._id &&\r\n                                <span className=\"deleteBtn\">\r\n                                    <button className=\"deleteIcon\" onClick={() => handleDelete(post._id)}>\r\n                                        <DeleteOutlinedIcon />\r\n                                    </button>\r\n                                </span>\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"postBody\">\r\n                            <span>{content}</span>\r\n                        </div>\r\n                        <div className=\"postFooter\">\r\n                            <div className=\"postButtonContainer\">\r\n                                <button onClick={() => commentsHandle(post._id)} >\r\n                                    <Badge badgeContent={updatedPostData?.replies.length} color=\"primary\">\r\n                                        <QuestionAnswerOutlinedIcon className={updatedPostData?.replies.length === 0 ? \"noReply\" : \"reply\"} />\r\n                                    </Badge>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"postButtonContainer\">\r\n                                <button onClick={() => handleLikeBtn(post._id)}>\r\n                                    <Badge badgeContent={updatedPostData?.likes.length} color=\"error\">\r\n                                        <FavoriteBorderIcon className={`far fa-heart ${updatedPostData?.likes.length === 0 ? \"inactive\" : \"active\"}`} />\r\n                                    </Badge>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Reply.tsx",["273","274"],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { API_BASE } from '../config';\r\nimport { postDataType, replyType } from '../reducers/postReducer';\r\nimport { timeDifference, useStyles } from '../utils/utils';\r\nimport { deleteReply } from '../actions/replyActions';\r\nimport { SigninType } from '../reducers/userReducer';\r\nimport { REPLY_DELETE_RESET } from '../constants/replyConstants';\r\nimport { ToggleAlert } from './ToggleAlert';\r\n\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport Pagination, { UsePaginationProps } from '@material-ui/lab/Pagination';\r\nimport { initialAppStateType } from '../store';\r\n\r\n\r\nexport interface ReplyPropsType {\r\n    post: postDataType;\r\n    signinInfo: SigninType;\r\n    updatedPostData: postDataType;\r\n    setUpdatedPostData?: Dispatch<SetStateAction<postDataType>>;\r\n}\r\n\r\nexport const Reply: React.FC<ReplyPropsType> = ({ post, signinInfo, updatedPostData, setUpdatedPostData }) => {\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [alertMsg, setAlertMsg] = useState<string>(\"\");\r\n\r\n    const getRepliedTime = (reply: replyType) => {\r\n        const repliedTime = timeDifference(new Date().valueOf(), new Date(reply.createdAt).valueOf());\r\n        return repliedTime;\r\n    }\r\n\r\n    const replyDeleteStore = useSelector((state: initialAppStateType) => state.replyDeleteStore);\r\n    const { error: errorDelete, loading: loadingDelete, result: resultDelete } = replyDeleteStore;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleDelete = (replyId: string, postId: string) => {\r\n        dispatch(deleteReply(replyId, postId));\r\n        setAlertMsg(\"Deleted\")\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    if (resultDelete && setUpdatedPostData !== undefined) {\r\n        setUpdatedPostData(resultDelete); // delete 하고 난 후에 해당 post데이터를 setUpdatePostData 로 state에 넣어준다. \r\n        dispatch({ type: REPLY_DELETE_RESET }) // 여기 리셋을 시켜줘야 버그(reply 를 delete 하고난 후에 heart 클릭하면 작동안함) 해결됬음\r\n    }\r\n\r\n    const sortedReplies = updatedPostData.replies && updatedPostData.replies.sort((reply_A, reply_B) => {\r\n        const A_time = new Date(reply_A.createdAt).valueOf();\r\n        const B_time = new Date(reply_B.createdAt).valueOf();\r\n        return B_time - A_time;\r\n    });\r\n\r\n\r\n    // pagination\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState<number>(1);\r\n    const [pageData, setPageData] = useState<replyType[]>([]);\r\n    const dataLimit = 5;\r\n    const indexOfLast = page * dataLimit;\r\n    const indexOfFirst = indexOfLast - dataLimit;\r\n    const handlePageChange: UsePaginationProps[\"onChange\"] = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (sortedReplies) {\r\n            setPageData(sortedReplies.slice(indexOfFirst, indexOfLast));\r\n        }\r\n    }, [indexOfFirst, indexOfLast, sortedReplies])\r\n\r\n    // ****************************\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            { sortedReplies && sortedReplies.length !== 0 &&\r\n                <div >\r\n                    {\r\n                        pageData &&\r\n                        pageData.map((reply) => {\r\n                            return (\r\n                                <div className=\"each__reply\" key={reply._id}>\r\n                                    <div className=\"top__reply\">\r\n                                        <div className=\"userImageContainer__reply\">\r\n                                            <img src={`${API_BASE}/uploads/images/${reply.repliedBy.profilePic}`} alt=\"profile\" />\r\n                                        </div>\r\n                                        <div className=\"comment__reply\">\r\n                                            <span>{reply.repliedBy.firstName + \" \" + reply.repliedBy.lastName}</span>\r\n                                            <span> {reply.comment}</span>\r\n                                        </div>\r\n                                        {\r\n                                            (reply.repliedBy._id === signinInfo._id || signinInfo._id === post.postedBy._id) &&\r\n                                            <span className=\"deleteReplyBtn\">\r\n                                                <button className=\"deleteReplyIcon\" onClick={() => handleDelete(reply._id, post._id)}>\r\n                                                    <DeleteOutlinedIcon />\r\n                                                </button>\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"time__reply\">\r\n                                        {getRepliedTime(reply)}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        (sortedReplies.length / dataLimit) >= 1 &&\r\n                        <div className={`${classes.root} pagination__reply`}>\r\n                            <Pagination count={Math.ceil(sortedReplies.length / dataLimit)} color=\"primary\" size=\"small\" page={page} onChange={handlePageChange} />\r\n                        </div>\r\n                    }\r\n                    <ToggleAlert open={open} handleAlertClose={() => setOpen(false)} alertMsg={alertMsg} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n",["275","276"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\replyActions.ts",["277"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\replyConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\replyReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ThirdColumn.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ProfileScreen.tsx",["278","279","280"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfileReplies.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfilePosts.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\HomeScreen.tsx",["281","282"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\FollowModal.tsx",["283","284","285","286","287"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ImgUploadModal.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CoverImgUploadModal.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SearchScreen.tsx",["288","289"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchPosts.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchUsers.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\searchConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NewMessageScreen.tsx",["290","291","292"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ToggleAlert.tsx",["293"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\searchAction.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\chatConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\chatAction.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\chatReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ChatScreen.tsx",["294","295","296","297","298","299"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CheckValidChatRoute.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\InvalidPage.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\MessageContents.tsx",["300","301","302","303","304","305"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\searchReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NotificationScreen.tsx",["306","307"],"import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialAppStateType } from '../store';\r\nimport { getNotification, getUnReadNotification } from '../actions/notificationAction';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { API_BASE } from '../config';\r\nimport { getNotificationTextFilter, getNotificationURL } from '../utils/utils';\r\nimport { notificationType } from '../reducers/notificationReducer';\r\nimport Axios from 'axios';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nexport const NotificationScreen = () => {\r\n    console.log(\"노티 스크린 랜더됨\")\r\n    const notificationStore = useSelector((state: initialAppStateType) => state.notificationStore);\r\n    const { error, loading, notifications } = notificationStore;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    // 각 알림을 클릭 햇을 경우 db에서 notification collection에 open 을 false 에서 true로 변경하기위함\r\n    const handleNotification = async (notification: notificationType) => {\r\n        // console.log('notification: ', notification);\r\n        await Axios.put(`${API_BASE}/notifications/markNotiOpened/${notification._id}`, {}, {\r\n            withCredentials: true,\r\n        });\r\n        // 알림을 읽으면 navbar에 표시된 읽지 않은 알림이 있는지 다시 받아서 숫자를 변경한다.\r\n        dispatch(getUnReadNotification());\r\n    }\r\n\r\n    const handleReadAll = async () => {\r\n        await Axios.put(`${API_BASE}/notifications/markAllNotiOpened/`, {}, {\r\n            withCredentials: true,\r\n        });\r\n        // 알림을 한번에 모두 확인(opened = true)로 바꾸는 걸 콜하고 바로 리랜더를 통해서 update된 notifications들을 불러오게 하기 위해서 사용했다.\r\n        dispatch(getNotification());\r\n        // 알림을 모두 확인을 하면 navbar에 표시된 읽지 않은 알림이 있는지 다시 받아서 숫자를 변경한다.\r\n        dispatch(getUnReadNotification());\r\n    }\r\n\r\n    const markAllClassName = () => {\r\n        const numOfUnreadNoti = notifications.filter((noti) => noti.opened === false).length\r\n\r\n        if (numOfUnreadNoti > 0) {\r\n            return \"markAll__active\"\r\n        }\r\n        return \"markAll__inactive\"\r\n    }\r\n\r\n    const deleteAllClassName = () => {\r\n        const numOfNotification = notifications.length\r\n\r\n        if (numOfNotification > 0) {\r\n            return \"deleteAll__active\"\r\n        }\r\n        return \"deleteAll__inactive\"\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        await Axios.delete(`${API_BASE}/notifications/deleteAll/`, {\r\n            withCredentials: true,\r\n        });\r\n        // 알림을 모두 지우고 update된 notifications들을 불러오게 하기 위해서 사용했다.\r\n        dispatch(getNotification());\r\n        // 알림을 모두 지우면 navbar에 표시된 읽지 않은 알림이 있는지 다시 받아서 숫자를 변경한다.\r\n        dispatch(getUnReadNotification());\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getNotification());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"mainSectionContainer col-10 col-md-8\">\r\n            <div className=\"titleContainer\">\r\n                <h1>Notification</h1>\r\n                <Tooltip title=\"Read All\">\r\n                    <button className={`${notifications && markAllClassName()}`} id=\"markNotificationsAsRead\" onClick={handleReadAll}>\r\n                        <i className=\"fas fa-check-double\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n                <Tooltip title=\"Delete All\" className={`${notifications && deleteAllClassName()}`}>\r\n                    <button id=\"markNotificationsAsRead\" onClick={handleDelete}>\r\n                        <i className=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n            </div>\r\n            {error && error}\r\n            {loading && loading}\r\n            {\r\n                notifications && notifications.length > 0 ?\r\n                    notifications.map((notification) => {\r\n                        const userFrom = notification.userFrom;\r\n                        const firstName = userFrom.firstName;\r\n                        const lastName = userFrom.lastName;\r\n                        const className = notification.opened ? \"notifyInActive\" : \"notifyActive\";\r\n\r\n                        return (\r\n                            <Link to={{\r\n                                pathname: `${getNotificationURL(notification)}`,\r\n                                state: notification.userFrom\r\n                            }} key={notification._id} className={`notification resultlistitem ${className}`}\r\n                                onClick={() => handleNotification(notification)}\r\n                            >\r\n\r\n                                <div className=\"userImageContainer\">\r\n                                    <img src={`${API_BASE}/uploads/images/${userFrom.profilePic}`} alt=\"user profile\" />\r\n                                </div>\r\n\r\n                                <div className=\"resultsDetailscontainer ellipsis\">\r\n                                    <span className=\"ellipsis\">{`${firstName} ${lastName}, ${getNotificationTextFilter(notification)}`}</span>\r\n                                    {/* <Alert className=\"ellipsis\" severity=\"info\">{`${firstName} ${lastName}, ${getNotificationTextFilter(notification)}`}</Alert> */}\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    }) : (\r\n                        <Alert severity=\"warning\">You have no Notifications.</Alert>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\notificationConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\notificationAction.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\notificationReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\socketio.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\hooks\\index.ts",["308"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ChatListScreen.tsx",["309","310"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\MessageScreen.tsx",["311","312","313"],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"314","replacedBy":"318"},{"ruleId":"316","replacedBy":"319"},{"ruleId":"314","replacedBy":"320"},{"ruleId":"316","replacedBy":"321"},{"ruleId":"314","replacedBy":"322"},{"ruleId":"316","replacedBy":"323"},{"ruleId":"324","severity":1,"message":"325","line":1,"column":264,"nodeType":"326","messageId":"327","endLine":1,"endColumn":279},{"ruleId":"324","severity":1,"message":"328","line":43,"column":13,"nodeType":"326","messageId":"327","endLine":43,"endColumn":17},{"ruleId":"314","replacedBy":"329"},{"ruleId":"316","replacedBy":"330"},{"ruleId":"324","severity":1,"message":"331","line":2,"column":8,"nodeType":"326","messageId":"327","endLine":2,"endColumn":13},{"ruleId":"324","severity":1,"message":"332","line":9,"column":10,"nodeType":"326","messageId":"327","endLine":9,"endColumn":18},{"ruleId":"324","severity":1,"message":"333","line":11,"column":10,"nodeType":"326","messageId":"327","endLine":11,"endColumn":12},{"ruleId":"324","severity":1,"message":"334","line":11,"column":14,"nodeType":"326","messageId":"327","endLine":11,"endColumn":20},{"ruleId":"324","severity":1,"message":"335","line":27,"column":11,"nodeType":"326","messageId":"327","endLine":27,"endColumn":18},{"ruleId":"314","replacedBy":"336"},{"ruleId":"316","replacedBy":"337"},{"ruleId":"324","severity":1,"message":"338","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":26},{"ruleId":"314","replacedBy":"339"},{"ruleId":"316","replacedBy":"340"},{"ruleId":"324","severity":1,"message":"328","line":10,"column":17,"nodeType":"326","messageId":"327","endLine":10,"endColumn":21},{"ruleId":"324","severity":1,"message":"341","line":28,"column":28,"nodeType":"326","messageId":"327","endLine":28,"endColumn":38},{"ruleId":"314","replacedBy":"342"},{"ruleId":"316","replacedBy":"343"},{"ruleId":"324","severity":1,"message":"333","line":15,"column":10,"nodeType":"326","messageId":"327","endLine":15,"endColumn":12},{"ruleId":"324","severity":1,"message":"344","line":17,"column":10,"nodeType":"326","messageId":"327","endLine":17,"endColumn":19},{"ruleId":"324","severity":1,"message":"345","line":1,"column":43,"nodeType":"326","messageId":"327","endLine":1,"endColumn":51},{"ruleId":"324","severity":1,"message":"335","line":29,"column":11,"nodeType":"326","messageId":"327","endLine":29,"endColumn":18},{"ruleId":"324","severity":1,"message":"346","line":32,"column":13,"nodeType":"326","messageId":"327","endLine":32,"endColumn":16},{"ruleId":"324","severity":1,"message":"347","line":32,"column":48,"nodeType":"326","messageId":"327","endLine":32,"endColumn":57},{"ruleId":"324","severity":1,"message":"348","line":34,"column":20,"nodeType":"326","messageId":"327","endLine":34,"endColumn":31},{"ruleId":"324","severity":1,"message":"349","line":34,"column":42,"nodeType":"326","messageId":"327","endLine":34,"endColumn":55},{"ruleId":"314","replacedBy":"350"},{"ruleId":"316","replacedBy":"351"},{"ruleId":"324","severity":1,"message":"341","line":8,"column":28,"nodeType":"326","messageId":"327","endLine":8,"endColumn":38},{"ruleId":"324","severity":1,"message":"352","line":45,"column":32,"nodeType":"326","messageId":"327","endLine":45,"endColumn":43},{"ruleId":"324","severity":1,"message":"353","line":45,"column":54,"nodeType":"326","messageId":"327","endLine":45,"endColumn":67},{"ruleId":"324","severity":1,"message":"354","line":49,"column":50,"nodeType":"326","messageId":"327","endLine":49,"endColumn":67},{"ruleId":"324","severity":1,"message":"355","line":23,"column":44,"nodeType":"326","messageId":"327","endLine":23,"endColumn":60},{"ruleId":"324","severity":1,"message":"356","line":23,"column":71,"nodeType":"326","messageId":"327","endLine":23,"endColumn":89},{"ruleId":"324","severity":1,"message":"357","line":2,"column":17,"nodeType":"326","messageId":"327","endLine":2,"endColumn":25},{"ruleId":"324","severity":1,"message":"358","line":2,"column":27,"nodeType":"326","messageId":"327","endLine":2,"endColumn":41},{"ruleId":"324","severity":1,"message":"359","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":16},{"ruleId":"324","severity":1,"message":"360","line":32,"column":23,"nodeType":"326","messageId":"327","endLine":32,"endColumn":35},{"ruleId":"324","severity":1,"message":"361","line":33,"column":23,"nodeType":"326","messageId":"327","endLine":33,"endColumn":35},{"ruleId":"324","severity":1,"message":"338","line":1,"column":41,"nodeType":"326","messageId":"327","endLine":1,"endColumn":50},{"ruleId":"324","severity":1,"message":"335","line":21,"column":11,"nodeType":"326","messageId":"327","endLine":21,"endColumn":18},{"ruleId":"324","severity":1,"message":"362","line":19,"column":27,"nodeType":"326","messageId":"327","endLine":19,"endColumn":37},{"ruleId":"324","severity":1,"message":"363","line":19,"column":48,"nodeType":"326","messageId":"327","endLine":19,"endColumn":60},{"ruleId":"324","severity":1,"message":"364","line":52,"column":15,"nodeType":"326","messageId":"327","endLine":52,"endColumn":35},{"ruleId":"324","severity":1,"message":"345","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":25},{"ruleId":"324","severity":1,"message":"365","line":4,"column":10,"nodeType":"326","messageId":"327","endLine":4,"endColumn":17},{"ruleId":"324","severity":1,"message":"333","line":13,"column":10,"nodeType":"326","messageId":"327","endLine":13,"endColumn":12},{"ruleId":"324","severity":1,"message":"335","line":36,"column":11,"nodeType":"326","messageId":"327","endLine":36,"endColumn":18},{"ruleId":"324","severity":1,"message":"352","line":46,"column":32,"nodeType":"326","messageId":"327","endLine":46,"endColumn":43},{"ruleId":"324","severity":1,"message":"353","line":46,"column":54,"nodeType":"326","messageId":"327","endLine":46,"endColumn":67},{"ruleId":"366","severity":1,"message":"367","line":109,"column":46,"nodeType":"368","messageId":"369","endLine":109,"endColumn":48},{"ruleId":"324","severity":1,"message":"338","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":26},{"ruleId":"324","severity":1,"message":"345","line":1,"column":28,"nodeType":"326","messageId":"327","endLine":1,"endColumn":36},{"ruleId":"324","severity":1,"message":"370","line":2,"column":10,"nodeType":"326","messageId":"327","endLine":2,"endColumn":21},{"ruleId":"324","severity":1,"message":"371","line":2,"column":23,"nodeType":"326","messageId":"327","endLine":2,"endColumn":34},{"ruleId":"324","severity":1,"message":"372","line":3,"column":10,"nodeType":"326","messageId":"327","endLine":3,"endColumn":25},{"ruleId":"324","severity":1,"message":"373","line":6,"column":10,"nodeType":"326","messageId":"327","endLine":6,"endColumn":29},{"ruleId":"324","severity":1,"message":"374","line":1,"column":17,"nodeType":"326","messageId":"327","endLine":1,"endColumn":28},{"ruleId":"324","severity":1,"message":"335","line":18,"column":11,"nodeType":"326","messageId":"327","endLine":18,"endColumn":18},{"ruleId":"375","severity":1,"message":"376","line":12,"column":8,"nodeType":"377","endLine":12,"endColumn":10,"suggestions":"378"},{"ruleId":"324","severity":1,"message":"379","line":7,"column":10,"nodeType":"326","messageId":"327","endLine":7,"endColumn":25},{"ruleId":"324","severity":1,"message":"344","line":14,"column":10,"nodeType":"326","messageId":"327","endLine":14,"endColumn":19},{"ruleId":"324","severity":1,"message":"379","line":7,"column":10,"nodeType":"326","messageId":"327","endLine":7,"endColumn":25},{"ruleId":"324","severity":1,"message":"333","line":11,"column":10,"nodeType":"326","messageId":"327","endLine":11,"endColumn":12},{"ruleId":"324","severity":1,"message":"334","line":11,"column":14,"nodeType":"326","messageId":"327","endLine":11,"endColumn":20},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],["380"],["381"],["380"],["381"],["380"],["381"],"@typescript-eslint/no-unused-vars","'USER_INFO_RESET' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.",["380"],["381"],"'Axios' is defined but never used.","'API_BASE' is defined but never used.","'io' is defined but never used.","'Socket' is defined but never used.","'history' is assigned a value but never used.",["380"],["381"],"'useEffect' is defined but never used.",["380"],["381"],"'signinInfo' is assigned a value but never used.",["380"],["381"],"'useSocket' is defined but never used.","'useState' is defined but never used.","'_id' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.",["380"],["381"],"'errorSignin' is assigned a value but never used.","'loadingSignin' is assigned a value but never used.","'loadingUserDetail' is assigned a value but never used.","'errorPostContent' is assigned a value but never used.","'loadingPostContent' is assigned a value but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'Button' is defined but never used.","'setFollowers' is assigned a value but never used.","'setFollowing' is assigned a value but never used.","'errorUsers' is assigned a value but never used.","'loadingUsers' is assigned a value but never used.","'selectedUserFullName' is assigned a value but never used.","'connect' is defined but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getChatMessages' is defined but never used.","'initialAppStateType' is defined but never used.","'useCallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["382"],"'ChatMessageType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"383","fix":"384"},"Update the dependencies array to be: [socket]",{"range":"385","text":"386"},[372,374],"[socket]"]